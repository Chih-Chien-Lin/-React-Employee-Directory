{"version":3,"sources":["components/JumboSec.js","components/TableSec.js","components/SearchForm.js","components/Employee-directory.js","App.js","index.js"],"names":["JumboSec","className","TableSec","props","onClick","handleSort","scope","sorted","state","id","name","phone","email","position","employees","map","employee","key","SearchForm","toBeSearched","value","search","onChange","handleInputChange","type","placeholder","handleFormSubmit","employeeList","each","push","EmployeeDirect","searched","event","target","filter","match","console","log","setState","preventDefault","sortCategory","getAttribute","sort","a","b","x","toLowerCase","y","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac7dd318.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Whenever we try to render an array containing JSX, React knows to render each JSX element separately\r\nfunction JumboSec() {\r\n  return (\r\n    <div className=\"jumbotron text-center bg-primary\">\r\n      <h1>Employee Directory</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JumboSec;","import React from \"react\";\r\n\r\n// Whenever we try to render an array containing JSX, React knows to render each JSX element separately\r\nfunction TableSec(props) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={props.handleSort} scope=\"col\" sorted = {props.state.id} name = \"id\">ID</th>\r\n                        <th onClick={props.handleSort} scope=\"col\" sorted = {props.state.name} name = \"name\">Name</th>\r\n                        <th onClick={props.handleSort} scope=\"col\" sorted = {props.state.phone} name = \"phone\">Phone</th>\r\n                        <th onClick={props.handleSort} scope=\"col\" sorted = {props.state.email} name = \"email\">Email</th>\r\n                        <th onClick={props.handleSort} scope=\"col\" sorted = {props.state.position} name = \"position\">position</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {props.employees.map(employee => (\r\n                        <tr key={employee.id}>\r\n                            <th scope=\"row\" >{employee.id}</th>\r\n\r\n                            <td>{employee.name}</td>\r\n\r\n                            <td>{employee.phone}</td>\r\n\r\n                            <td>{employee.email}</td>\r\n                            <td>{employee.position}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableSec;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form className=\"form offset-md-3\">\r\n            <input\r\n                value={props.search}\r\n                onChange={props.handleInputChange}\r\n                type=\"text\"\r\n                placeholder=\"Search name\"\r\n            />\r\n            <button onClick={props.handleFormSubmit}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchForm;","import React, { Component } from \"react\";\nimport JumboSec from \"./JumboSec\"\nimport TableSec from \"./TableSec\"\nimport SearchForm from \"./SearchForm\"\n\n\nconst employees = [\n  {\n    id: 1,\n    name: \"Justin\",\n    email: \"justin@gmail.com\",\n    phone: \"123-456-789\",\n    position: \"Engineer\"\n  },\n  {\n    id: 2,\n    name: \"Ben\",\n    email: \"ben@gmail.com\",\n    phone: \"321-456-789\",\n    position: \"developer\"\n  },\n  {\n    id: 3,\n    name: \"John\",\n    email: \"john@gmail.com\",\n    phone: \"528-456-789\",\n    position: \"Engineer\"\n  },\n  {\n    id: 4,\n    name: \"Kate\",\n    email: \"kate@gmail.com\",\n    phone: \"284-456-789\",\n    position: \"Manager\"\n  },\n  {\n    id: 5,\n    name: \"Sandy\",\n    email: \"sandy@gmail.com\",\n    phone: \"418-456-789\",\n    position: \"Engineer\"\n  },\n  {\n    id: 6,\n    name: \"Julia\",\n    email: \"julia@gmail.com\",\n    phone: \"732-456-789\",\n    position: \"Engineer\"\n  },\n];\n\n\n\n\nvar employeeList = [];\nvar toBeSearched;\nemployees.map(each => (\n  employeeList.push(each.name)\n));\n\n// Match function!!\n// const match = (s) => {\n//   const p = Array.from(s).reduce((a, v, i) => `${a}[^${s.substr(i)}]*?${v}`, '');\n//   const re = RegExp(p);\n\n//   return employeeList.filter(v => v.match(re));\n// };\n\nclass EmployeeDirect extends Component {\n  state = {\n    searched: \"\",\n    id: \"false\",\n    name: \"false\",\n    email: \"false\",\n    phone: \"false\",\n    position: \"false\"\n  };\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    const { value } = event.target;\n    toBeSearched = employees.filter(employee => employee.name.match(value));\n    console.log(\"new employees: \",employees)\n    console.log(\"tobesearched: \", toBeSearched)\n    // Updating the input's state\n    this.setState({\n      searched: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n    this.setState({\n      searched: \"\"\n    });\n  };\n\n  handleSort = event => {\n    console.log(\"to sort function\")\n    var sortCategory = event.target.getAttribute(\"name\");\n    console.log(\"event of sort: \",sortCategory)\n    if (event.target.getAttribute(\"sorted\") === \"false\") {\n      if (sortCategory === \"name\") {\n        console.log(\"Jump to name\")\n        this.setState({\n          [sortCategory]: \"true\"\n        });\n        employees.sort(function (a, b) {\n          var x = a.name.toLowerCase();\n          var y = b.name.toLowerCase();\n          if (x < y) { return -1; }\n          if (x > y) { return 1; }\n          return 0;\n        });\n      } else if (sortCategory === \"phone\") {\n        console.log(\"Jump to phone\")\n        this.setState({\n          [sortCategory]: \"true\"\n        });\n        employees.sort(function (a, b) {\n          var x = a.phone.toLowerCase();\n          var y = b.phone.toLowerCase();\n          if (x < y) { return -1; }\n          if (x > y) { return 1; }\n          return 0;\n        });\n      } else if (sortCategory === \"email\") {\n        console.log(\"Jump to email\")\n        this.setState({\n          [sortCategory]: \"true\"\n        });\n        employees.sort(function (a, b) {\n          var x = a.email.toLowerCase();\n          var y = b.email.toLowerCase();\n          if (x < y) { return -1; }\n          if (x > y) { return 1; }\n          return 0;\n        });\n      } else if (sortCategory === \"position\") {\n        console.log(\"Jump to position\")\n        this.setState({\n          [sortCategory]: \"true\"\n        });\n        employees.sort(function (a, b) {\n          var x = a.position.toLowerCase();\n          var y = b.position.toLowerCase();\n          if (x < y) { return -1; }\n          if (x > y) { return 1; }\n          return 0;\n        });\n      };\n    } else {\n      console.log(\"Jump to else ID\")\n      console.log(\"Jump to id\")\n      this.setState({\n        [sortCategory]: \"false\"\n      });\n      employees.sort(function (a, b) {\n        console.log(\"a: \",a.id)\n        var x = a.id;\n        var y = b.id;\n        if (x < y) { return -1; }\n        if (x > y) { return 1; }\n        return 0;\n      });\n    };\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <JumboSec />\n\n        <SearchForm\n          search={this.state.searched}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <br></br><br></br>\n\n        {this.state.searched ? (\n          <TableSec\n            employees = {toBeSearched}\n            state = {this.state}\n            handleSort = {this.handleSort}\n          />\n        ) : (\n            <TableSec\n              employees = {employees}\n              state = {this.state}\n              handleSort = {this.handleSort}\n            />\n          )}\n\n      </div>\n    );\n  }\n}\n\nexport default EmployeeDirect;\n","import React from \"react\";\nimport EmployeeDirectory from \"./components/Employee-directory\";\n\n\n\nconst App = () => <EmployeeDirectory />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}